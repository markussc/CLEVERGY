{% extends 'base.html.twig' %}
{% block meta %}<meta http-equiv="refresh" content="300" />{% endblock %}
    
{% block body %}
    <div class="row">
        {% include 'default/content.html.twig' %}
    </div>
    {#
    <div class="row">
        <div class="small-12 columns">
            <canvas id="myChart" width="100%;" height="50%;"></canvas>
        </div>
    </div>
    #}
{% endblock %}

{% block javascripts %}
    <script>
        (function worker() {
            $.ajax({
              url: '{{ path('refresh') }}', 
              success: function(data) {
                $(data).filter('div').each(function(){
                    var divId = $(this).attr('id');
                    $("#" + divId).replaceWith($(this));
                });
              },
              complete: function() {
                // Schedule the next request when the current one's complete
                setTimeout(worker, 1000);
              }
            });
        })();

        function sendCommandToDevice(command)
        {
            // show spinner
            $body = $("body");
            $body.addClass("loading");
            // send command
            var url = "{{ path('command_exec', {'command': 'command_val'}) }}";
            url = url.replace('command_val', JSON.stringify(command));
            window.location = url;
        }
    </script>
    {#
    <script>
        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
                datasets: [{
                    label: '# of notifications per system',
                    data: [12, 19, 3, 5, 2, 3],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    </script>
    #}
{% endblock %}
